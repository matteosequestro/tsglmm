function [out, f1] = tsglmm_plot_clust_par_means(data)
% plots group-level parameter means with SEs % and overlays (or replaces) 
% them with Bayes factors (BF10) per parameter.

parnames = data.Properties.VariableNames;    % get parameter names
data = table2array(data);                    % convert table to numeric array

means = mean(data);                          % compute mean across participants
ses = std(data) ./ sqrt(height(data));       % compute standard error of the mean


%%% Compute Bayes factors for each parameter (vs zero)
BF10 = NaN(width(data), 1);
for ii = 1:width(data)
    BF10(ii) = bf.ttest(data(:,ii), 0);     % one-sample Bayesian t-test
    fprintf('%s: BF10 = %.2f, BF01 = %.2f \n', ...
        parnames{ii}, BF10(ii), 1/BF10(ii));
end


%%% Plot Bayes factors instead of raw data
f1 = figure; 
tiledlayout(1,2)
nexttile
hold on
for i = 1:width(data)
    x = i + 0.1*(rand(size(data,1),1)-0.5); % add small horizontal jitter
    scatter(x, data(:,i), 15, ...
        'k', 'filled', ...
        'MarkerFaceAlpha', 0.5);            % plot individual dots
end

errorbar(1:width(data), means, ses, 'o', ...
    'MarkerSize', 3, 'MarkerFaceColor', 'r', 'Color', 'r', ...
    'LineWidth', 1.2, 'CapSize', 0);        % plot mean ± SE bars

xlim([0.5 width(data)+.5])
set(gca, 'XTick', 1:width(data))
set(gca, 'XTickLabels', parnames)
box on
yline(0, '--')                              % reference line at zero
ylabel('parameter estimate (a.u.)')


nexttile
hold on
% bar or scatter for BF10 values (log10 scale)
scatter(1:width(data), log10(BF10), 50, 'r', 'filled') % plot log10(BF10)
yline(log10(3), '--k', 'BF10 = 3 (moderate evidence)', 'LabelVerticalAlignment','bottom')
yline(log10(10), '--k', 'BF10 = 10 (strong evidence)', 'LabelVerticalAlignment','bottom')

set(gca, 'XTick', 1:width(data))
set(gca, 'XTickLabels', parnames)
ylabel('log_{10}(BF_{10})')
xlim([0.5 width(data)+0.5])
box on

title('Evidence for parameter ≠ 0 (Bayes factors)')

% Output structure
out.parnames = parnames;
out.BF10 = BF10;
out.BF01 = 1 ./ BF10;
out.means = means;
out.ses = ses;

end
